word2: {	program	[1, 1]
word2: {	compoundstmt	[1, 1]
word1: {	{	[1, 1]
word2: if	stmts	[2, 3]
word2: if	stmt	[2, 3]
word2: if	ifstmt	[2, 3]
word1: if	if	[2, 3]
word1: (	(	[2, 5]
word2: ID	boolexpr	[2, 8]
word2: ID	arithexpr	[2, 8]
word2: ID	multexpr	[2, 8]
word2: ID	simpleexpr	[2, 8]
word1: ID	ID	[2, 8]
word2: ==	multexprprime	[2, 11]
word2: ==	arithexprprime	[2, 11]
word2: ==	boolop	[2, 11]
word1: ==	==	[2, 11]
word2: NUM	arithexpr	[2, 15]
word2: NUM	multexpr	[2, 15]
word2: NUM	simpleexpr	[2, 15]
word1: NUM	NUM	[2, 15]
word2: )	multexprprime	[2, 17]
word2: )	arithexprprime	[2, 17]
word1: )	)	[2, 17]
word1: {	then	[3, 1]
