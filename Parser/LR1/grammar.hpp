#ifndef _GRAMMAR_H_
#define _GRAMMAR_H_

#include<map>
#include<string>

const int NonTerminalCount = 14;
const int TerminalCount = 22;

// how do terminals map to indices: "(" -> 0; ")" -> 1; "*" -> 2; "+" -> 3; "-" -> 4; "/" -> 5; ";" -> 6; "<" -> 7; "<=" -> 8; "=" -> 9; "==" -> 10; ">" -> 11; ">=" -> 12; "ID" -> 13; "NUM" -> 14; "else" -> 15; "if" -> 16; "then" -> 17; "while" -> 18; "{" -> 19; "}" -> 20; eof -> 21; 
static const int LR1ActionTable[134][22] = {
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   3,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   0,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 256,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  13,  -1,  -1,  10,  -1,  14,  12, 263,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  13,  -1,  -1,  10,  -1,  14,  12, 263,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 260,  -1,  -1, 260,  -1, 260, 260, 260,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  16,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 257,  -1,  -1, 257,  -1, 257, 257, 257,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 258,  -1,  -1, 258,  -1, 258, 258, 258,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 259,  -1,  -1, 259,  -1, 259, 259, 259,  -1,},
	{   17,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 263,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  13,  -1,  -1,  10,  -1,  14,  12, 263,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   20,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 262,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 261,},
	{   25,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  27,  26,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  28,  -1,},
	{   32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  34,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   25,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  27,  26,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  36,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  39,  38,  -1,  40,  42,  41,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  44,  46,  -1,  -1, 276, 276,  -1, 276, 276, 276,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  50, 280, 280,  48,  -1, 280, 280,  -1, 280, 280, 280,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   54,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  56,  55,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1, 282, 282, 282, 282,  -1, 282, 282,  -1, 282, 282, 282,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1, 281, 281, 281, 281,  -1, 281, 281,  -1, 281, 281, 281,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 261,  -1,  -1, 261,  -1, 261, 261, 261,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  57,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  59,  61,  -1, 276,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  65, 280, 280,  63, 280,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   54,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  56,  55,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1, 282, 282, 282, 282, 282,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1, 281, 281, 281, 281, 281,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  67,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  68,  -1,  -1,  -1,  -1,},
	{   54,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  56,  55,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{  270,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 270, 270,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{  268,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 268, 268,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{  272,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 272, 272,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{  271,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 271, 271,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{  269,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 269, 269,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1, 273, 273,  -1, 273, 273, 273,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   25,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  27,  26,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1, 276, 276,  -1, 276, 276, 276,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   25,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  27,  26,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1, 277, 277,  -1,  -1, 277, 277,  -1, 277, 277, 277,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   25,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  27,  26,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1, 280, 280,  -1,  -1, 280, 280,  -1, 280, 280, 280,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   25,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  27,  26,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  74,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 276,  -1,  76,  78,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 280,  82, 280, 280,  80,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   54,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  56,  55,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 282, 282, 282, 282, 282,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 281, 281, 281, 281, 281,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 266,  -1,  -1, 266,  -1, 266, 266, 266,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1, 273,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  34,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1, 276,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  34,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1, 277, 277,  -1, 277,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  34,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1, 280, 280,  -1, 280,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  34,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  88,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  13,  -1,  -1,  10,  -1,  14,  12,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  97,  -1,  -1,  95,  -1,  98,  96,  -1,  -1,},
	{   -1, 267,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  44,  46,  -1,  -1, 276, 276,  -1, 276, 276, 276,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  44,  46,  -1,  -1, 276, 276,  -1, 276, 276, 276,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  50, 280, 280,  48,  -1, 280, 280,  -1, 280, 280, 280,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  50, 280, 280,  48,  -1, 280, 280,  -1, 280, 280, 280,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1, 283, 283, 283, 283,  -1, 283, 283,  -1, 283, 283, 283,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 273,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   54,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  56,  55,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 276,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   54,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  56,  55,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 277,  -1, 277, 277,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   54,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  56,  55,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 280,  -1, 280, 280,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   54,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  56,  55,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 107,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  59,  61,  -1, 276,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  59,  61,  -1, 276,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  65, 280, 280,  63, 280,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  65, 280, 280,  63, 280,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1, 283, 283, 283, 283, 283,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 265,  -1,  -1, 265,  -1, 265, 265, 265,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 112,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 260,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 257,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 258,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 259,  -1,  -1,  -1,  -1,  -1,  -1,},
	{  113,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  13,  -1,  -1,  10,  -1,  14,  12, 263,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 115,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{  116,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1, 274, 274,  -1, 274, 274, 274,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1, 275, 275,  -1, 275, 275, 275,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1, 279, 279,  -1,  -1, 279, 279,  -1, 279, 279, 279,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1, 278, 278,  -1,  -1, 278, 278,  -1, 278, 278, 278,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 276,  -1,  76,  78,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 276,  -1,  76,  78,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 280,  82, 280, 280,  80,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 280,  82, 280, 280,  80,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 283, 283, 283, 283, 283,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1, 274,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1, 275,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1, 279, 279,  -1, 279,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1, 278, 278,  -1, 278,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  13,  -1,  -1,  10,  -1,  14,  12,  -1,  -1,},
	{   25,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  27,  26,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 123,  -1,},
	{   32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  34,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   25,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  27,  26,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 274,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 275,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 279,  -1, 279, 279,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 278,  -1, 278, 278,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 264,  -1,  -1, 264,  -1, 264, 264, 264,  -1,},
	{   -1, 126,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 261,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1, 127,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 128,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 129,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 266,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  97,  -1,  -1,  95,  -1,  98,  96,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  97,  -1,  -1,  95,  -1,  98,  96,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 265,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 132,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  97,  -1,  -1,  95,  -1,  98,  96,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 264,  -1,  -1,  -1,  -1,  -1,  -1,},
};
// how do terminals map to indices: <arithexpr> -> 0; <arithexprprime> -> 1; <assgstmt> -> 2; <boolexpr> -> 3; <boolop> -> 4; <compoundstmt> -> 5; <ifstmt> -> 6; <multexpr> -> 7; <multexprprime> -> 8; <program> -> 9; <simpleexpr> -> 10; <stmt> -> 11; <stmts> -> 12; <whilestmt> -> 13; 
static const int LR1GotoTable[133][14] = {
	{   -1,  -1,  -1,  -1,  -1,   2,  -1,  -1,  -1,   1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,   9,  -1,  -1,   5,   7,  -1,  -1,  -1,  -1,   4,   6,   8,},
	{   -1,  -1,   9,  -1,  -1,   5,   7,  -1,  -1,  -1,  -1,   4,  15,   8,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,   9,  -1,  -1,   5,   7,  -1,  -1,  -1,  -1,   4,  18,   8,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   22,  -1,  -1,  21,  -1,  -1,  -1,  23,  -1,  -1,  24,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   29,  -1,  -1,  -1,  -1,  -1,  -1,  30,  -1,  -1,  31,  -1,  -1,  -1,},
	{   22,  -1,  -1,  35,  -1,  -1,  -1,  23,  -1,  -1,  24,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  37,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  43,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  47,  -1,  -1,  -1,  -1,  -1,},
	{   51,  -1,  -1,  -1,  -1,  -1,  -1,  52,  -1,  -1,  53,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  58,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  62,  -1,  -1,  -1,  -1,  -1,},
	{   66,  -1,  -1,  -1,  -1,  -1,  -1,  52,  -1,  -1,  53,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   69,  -1,  -1,  -1,  -1,  -1,  -1,  52,  -1,  -1,  53,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  70,  -1,  -1,  24,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  71,  -1,  -1,  24,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  72,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  73,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  75,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  79,  -1,  -1,  -1,  -1,  -1,},
	{   83,  -1,  -1,  -1,  -1,  -1,  -1,  52,  -1,  -1,  53,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  84,  -1,  -1,  31,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  85,  -1,  -1,  31,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  86,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  87,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,   9,  -1,  -1,   5,   7,  -1,  -1,  -1,  -1,  89,  -1,   8,},
	{   -1,  -1,  94,  -1,  -1,  91,  92,  -1,  -1,  -1,  -1,  90,  -1,  93,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  99,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 100,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 101,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 102,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1, 103,  -1,  -1,  53,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1, 104,  -1,  -1,  53,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 105,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 106,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 108,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 109,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 110,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 111,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,   9,  -1,  -1,   5,   7,  -1,  -1,  -1,  -1,   4, 114,   8,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 117,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1, 118,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 119,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 120,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,   9,  -1,  -1,   5,   7,  -1,  -1,  -1,  -1, 121,  -1,   8,},
	{   22,  -1,  -1, 122,  -1,  -1,  -1,  23,  -1,  -1,  24,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{  124,  -1,  -1,  -1,  -1,  -1,  -1,  30,  -1,  -1,  31,  -1,  -1,  -1,},
	{   22,  -1,  -1, 125,  -1,  -1,  -1,  23,  -1,  -1,  24,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  94,  -1,  -1,  91,  92,  -1,  -1,  -1,  -1, 130,  -1,  93,},
	{   -1,  -1,  94,  -1,  -1,  91,  92,  -1,  -1,  -1,  -1, 131,  -1,  93,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
	{   -1,  -1,  94,  -1,  -1,  91,  92,  -1,  -1,  -1,  -1, 133,  -1,  93,},
};
std::map<int, std::string> Index2NonTerminal = {
	{0, "<arithexpr>"},
	{1, "<arithexprprime>"},
	{2, "<assgstmt>"},
	{3, "<boolexpr>"},
	{4, "<boolop>"},
	{5, "<compoundstmt>"},
	{6, "<ifstmt>"},
	{7, "<multexpr>"},
	{8, "<multexprprime>"},
	{9, "<program>"},
	{10, "<simpleexpr>"},
	{11, "<stmt>"},
	{12, "<stmts>"},
	{13, "<whilestmt>"},
};
std::map<int, std::string> Index2Terminal = {
	{0, "("},
	{1, ")"},
	{2, "*"},
	{3, "+"},
	{4, "-"},
	{5, "/"},
	{6, ";"},
	{7, "<"},
	{8, "<="},
	{9, "="},
	{10, "=="},
	{11, ">"},
	{12, ">="},
	{13, "ID"},
	{14, "NUM"},
	{15, "else"},
	{16, "if"},
	{17, "then"},
	{18, "while"},
	{19, "{"},
	{20, "}"},
	{21, "eof"},
};
std::map<std::string, int> NonTerminal2Index = {
	{"arithexpr", 0},
	{"arithexprprime", 1},
	{"assgstmt", 2},
	{"boolexpr", 3},
	{"boolop", 4},
	{"compoundstmt", 5},
	{"ifstmt", 6},
	{"multexpr", 7},
	{"multexprprime", 8},
	{"program", 9},
	{"simpleexpr", 10},
	{"stmt", 11},
	{"stmts", 12},
	{"whilestmt", 13},
};
std::map<std::string, int> Terminal2Index = {
	{"(", 0},
	{")", 1},
	{"*", 2},
	{"+", 3},
	{"-", 4},
	{"/", 5},
	{";", 6},
	{"<", 7},
	{"<=", 8},
	{"=", 9},
	{"==", 10},
	{">", 11},
	{">=", 12},
	{"ID", 13},
	{"NUM", 14},
	{"else", 15},
	{"if", 16},
	{"then", 17},
	{"while", 18},
	{"{", 19},
	{"}", 20},
	{"eof", 21},
};
std::vector<int> productionLength = {
	1,
	1,
	1,
	1,
	1,
	3,
	2,
	0,
	8,
	5,
	4,
	3,
	1,
	1,
	1,
	1,
	1,
	2,
	3,
	3,
	0,
	2,
	3,
	3,
	0,
	1,
	1,
	3,
};
std::vector<std::string> productionName = {
	"program",
	"stmt",
	"stmt",
	"stmt",
	"stmt",
	"compoundstmt",
	"stmts",
	"stmts",
	"ifstmt",
	"whilestmt",
	"assgstmt",
	"boolexpr",
	"boolop",
	"boolop",
	"boolop",
	"boolop",
	"boolop",
	"arithexpr",
	"arithexprprime",
	"arithexprprime",
	"arithexprprime",
	"multexpr",
	"multexprprime",
	"multexprprime",
	"multexprprime",
	"simpleexpr",
	"simpleexpr",
	"simpleexpr",
};



#endif // _GRAMMAR_H_